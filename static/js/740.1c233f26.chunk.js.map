{"version":3,"file":"static/js/740.1c233f26.chunk.js","mappings":"mQA8BaA,GA1BSC,EAAAA,GAAAA,IAAH,uMAWFA,EAAAA,GAAAA,IAAH,0FAMIA,EAAAA,GAAAA,IAAH,+HASYA,EAAAA,GAAAA,GAAH,iJAWXC,EAAcD,EAAAA,GAAAA,GAAH,wnCA6CXE,EAAiBF,EAAAA,GAAAA,GAAH,mOAadG,EAAaH,EAAAA,GAAAA,EAAH,mKAYVI,EAAaJ,EAAAA,GAAAA,IAAH,iiD,GAwEDA,EAAAA,GAAAA,IAAH,ggC,4BC3KJ,SAASK,EAAcC,GAGlC,IAAIC,GAASC,EAAAA,EAAAA,MAEbC,QAAQC,IAAI,UAAWH,GACvBE,QAAQC,IAAI,eAAgBC,KAAKC,UAAUL,EAAOM,KAMlD,IAAMC,GAAWC,EAAAA,EAAAA,MASXC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,WAM/CI,EAAsB,SAACP,GAmBzB,ICrDkBQ,EDqDZC,EAAcC,EAAYC,SAASjB,EAAOM,KAEhDJ,QAAQC,IAAI,cAAeC,KACtBC,UAAUU,IAEfR,GC1DkBO,ED0DCC,EC1DS,CAAEG,KAAMC,EAAAA,GAAYL,KAAAA,MD0FpD,OAjBAM,EAAAA,EAAAA,YAAU,WAIN,OAHIpB,EAAOM,IAAoB,KAAdN,EAAOM,IACpBO,EAAoBb,EAAOM,IAExB,WACHC,EC/EuB,CAAEW,KAAMG,EAAAA,QDiFpC,CAACrB,EAAOM,KAQXJ,QAAQC,IAAI,eAAgBM,GAExBa,OAAOC,KAAKd,IAAY,EACjB,MAIP,gBAAKe,UAAU,oBAAoBC,MAAO,CACtCC,UAAW,QADf,UAII,iBAAKF,UAAU,mCAAf,WACI,iBAAKA,UAAU,4CAAf,WACI,gBAAKA,UAAU,SAAf,UACI,gBAAKA,UAAU,UAAf,UAEI,gBAAKA,UAAU,OAAf,UACI,gBAAKG,IAAKlB,EAAQmB,MAAOH,MAAO,CAAEI,QAAS,QAASC,MAAO,OAAQC,OAAQ,gBAIvF,iBAAKP,UAAU,kBAAf,WAEI,UAAChC,EAAD,eAAeiB,EAAQuB,UACvB,UAACtC,EAAD,iBAAiBe,EAAQwB,MAAzB,QACA,SAACtC,EAAD,UAAiBc,EAAQyB,YACzB,SAACtC,EAAD,UAAaa,EAAQ0B,eACrB,UAACtC,EAAD,YACI,gBAAK2B,UAAU,iBAAf,UAEI,SAAC,MAAD,CAAqBY,KAAM,QAE/B,gBAAKZ,UAAU,UAAf,mCAOZ,gBAAKA,UAAU,sBAAf,wB","sources":["pages/proDetail/style.js","pages/proDetail/index.js","redux/action/proDetailAction.js"],"sourcesContent":["\n\nimport styled from 'styled-components'\n\nconst DetailWrapper = styled.div`\n\n    display: flex;\n    flex-direction: row;\n    background: #ffffff;\n    border:1px solid red;\n    margin: 100px auto;\n    padding: 50px 0;\n    box-size: border-box;\n`;\n\nconst LeftPart = styled.div`\n    width:500px;\n    height:750px;\n    border:1px solid green;\n`;\n\nconst RightPart = styled.div`\n    width: 576px;\n    height: 388px;\n    padding: 20px 20px 20px 40px;\n    border:1px solid red;\n\n`;\n\n\nexport const DetailTitle = styled.h1`\n    color:#333333;\n    width: 516px;\n    height:72px;\n    margin-top: 0 0 14px;\n    padding: 15px;\n    font:28px;\n`;\n\n\n// 前后三角形， 组成 正方形\nexport const DetailPrice = styled.h2`\n    position: relative;\n    color:#ffffff;\n    font:22px;\n    background: #00B5AD;\n    margin:30px 0 0 22px;\n    padding:12px 33px;\n    width: 167px;\n    height: 52px;\n\n    &:hover{\n        background-color: #009c95;\n        border-color: #009c95;\n        color: #fff;\n    }\n    &:before{\n        position: absolute;\n        -webkit-transform: translateY(-50%) translateX(50%) rotate(-45deg);\n        transform: translateY(-50%) translateX(50%) rotate(-45deg);\n        top: 50%;\n        right: 100%;\n        content: '';\n        background-color: inherit;\n        background-image: none;\n        width: 1.56em;\n        height: 1.56em;\n        -webkit-transition: none;\n        transition: none;\n    }\n    &:after{\n        position: absolute;\n        content: '';\n        top: 50%;\n        left: -0.25em;\n        margin-top: -0.25em;\n        background-color: #fff;\n        width: 0.5em;\n        height: 0.5em;\n        -webkit-box-shadow: 0 -1px 1px 0 rgb(0 0 0 / 30%);\n        box-shadow: 0 -1px 1px 0 rgb(0 0 0 / 30%);\n        // 白点\n        border-radius: 50%;\n    }\n`;\n\nexport const DetailCategory = styled.h3`\n    color:#A5673F;\n    background:#F3f4f5;\n    margin: 25px 0 14px;\n    padding:11px 14px;\n    font:18px;\n    width:516px;\n    height: 47px;\n    border:1px solid gray;\n    border-radius: 5px;\n\n`;\n\nexport const DetailDesc = styled.p`\n    color: #777777;\n    font-size: 19px;\n    margin: 0 0 18px;\n    width:516px;\n    color:lightblack;\n    font-weight:500;\n    \n\n\n`;\n\nexport const DetailCart = styled.div`\n\n    background-color: #ff3e6c;\n    border: 1px solid #ff3e6c;\n    color: #fff;\n    font-size: 18px;\n    margin-left: 0;\n    max-width: 15rem;\n    margin-right: auto;\n    position: relative;\n    overflow: hidden;\n    padding-right: 0!important;\n    vertical-align: middle;\n    z-index: 1;\n    margin: 0 0.25em 0 0;\n    padding: 0.78571429em 1.5em 0.78571429em;\n    text-transform: none;\n    text-shadow: none;\n    font-weight: 700;\n    line-height: 1em;\n    font-style: normal;\n    text-align: center;\n    text-decoration: none;\n    border-radius: 0.28571429rem;\n    min-height: 1em;\n    cursor: pointer;\n    // background: #e0e1e2 none;\n    transition: opacity .1s ease,background-color .1s ease,color .1s ease,box-shadow .1s ease,background .1s ease,-webkit-box-shadow .1s ease;\n\n    outline:0;\n    &:hover{\n        background-image: none;\n        box-shadow: 0 0 0 1px transparent inset;\n\n        > div.hidden {\n            top: 50%;\n            right: auto;\n        }\n\n        > div.visible {\n            transform: translateY(200%);\n            right: auto;\n        }\n    }\n\n    > div.hidden {\n        top: -50%;\n        left: 0;\n        right: auto;\n        margin-top: -0.5em;\n        position: absolute;\n        width: 100%;\n        will-change: transform,opacity;\n        transition: top .3s ease,transform .3s ease,-webkit-transform .3s ease;\n \n    }\n    > div.visible {\n        transition: top .3s ease,transform .3s ease,-webkit-transform .3s ease;\n    }\n\n\n\n\n\n\n\n\n\n\n`;\n\n\nconst DetailDivided = styled.div`\n    // color:#000000D9;\n    // font:14px;\n    // width:30px;\n    // height:403px;\n    // border:1px solid red;\n\n    position: absolute;\n    z-index: 2;\n    top: 50%;\n    left: 50%;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    height: 50%;\n    line-height: 0;\n    text-align: center;\n    -webkit-transform: translateX(-50%);\n    transform: translateX(-50%);\n\n    &:before {\n        top: -100%;\n        position: absolute;\n        left: 50%;\n        content: '';\n        z-index: 3;\n        border-left: 1px solid rgba(34,36,38,.15);\n        border-right: 1px solid rgba(255,255,255,.1);\n        width: 0%;\n        height: calc(100% - 1rem);\n    }\n    &:after {\n        top: auto;\n        bottom: 0;\n        position: absolute;\n        left: 50%;\n        content: '';\n        z-index: 3;\n        border-left: 1px solid rgba(34,36,38,.15);\n        border-right: 1px solid rgba(255,255,255,.1);\n        width: 0%;\n        height: calc(100% - 1rem);\n    }\n`;","import { Routes, Route, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport axios from \"axios\"\nimport styled from 'styled-components'\nimport { BsFillCartCheckFill } from \"react-icons/bs\";\nimport { DetailCart, DetailPrice, DetailCategory, DetailTitle, DetailDesc } from \"./style\";\nimport { getDetail, removeDetail } from \"../../redux/action/proDetailAction\";\n\nimport ProductList from '../../config/productList.json'\n\n\nexport default function ProductDetail(p) {\n\n    // ----------------------> without useReducer, useDispatch hooks\n    let params = useParams();\n\n    console.log(\"params:\", params)\n    console.log(\"params json:\", JSON.stringify(params.id))\n\n    // const [product, setProduct] = useState({});\n\n    // ----------------------------> useDispatch hooks.......!\n\n    const dispatch = useDispatch()\n\n\n    //  useReducer 是结合useContent 用的。\n    // const [state, dispatch] = useReducer(reducer, initState)\n\n\n    // 相当于之前的 mapStateToProps\n    // 这个相当于是取 根 下面的state， 就是 allreduce那边，存储的state，所以要取到最底层。\n    const product = useSelector(state => state.proDetail.product)\n\n\n\n    // console.log(\"detail state\", product)\n\n    const getDetailDataAction = (id) => {\n        // 这种接收 ID 的呼叫API 方法  axios.get(`/api/producetList.json?id=${id}`)，\n        // 要写 json?id=${id}， 而不是json/?id=${id}!!\n\n        // axios.get(`/api/producetList.json?id=${id}`)\n        //     .then((res) => {\n\n        // console.log(\"detail res\", res.data)\n\n        // const result = {};\n        // const findContent = result.find((productObj) => {\n        //     // console.log(typeof (productObj.id));\n        //     // console.log(typeof (params.id));\n\n        //     //  params.id 和 product ID type 类型不一样，JSON里面是 ”“ string， 自身的是 number\n        //     // 所以对比的时候，要么 == 俩个等于号（不比较类型， 模糊）， 要么是 === 2个等于号，但是要转换下 string to number类型\n        //     return productObj.id === parseInt(params.id);\n        // });\n\n        const findContent = ProductList[parseInt(params.id)]\n\n        console.log(\"findContent\", JSON\n            .stringify(findContent))\n\n        dispatch(getDetail(findContent))\n        // console.log(findContent);\n        // if (findContent) {\n        //     setProduct(findContent)\n        // }\n\n        // }).catch((error) => {\n        //     console.log(error)\n        // })\n    }\n\n\n    // console.log(\"findcontent\", findContent)\n\n\n    useEffect(() => {\n        if (params.id && params.id !== \"\") {\n            getDetailDataAction(params.id)\n        };\n        return () => {\n            dispatch(removeDetail());\n        }\n    }, [params.id]);\n\n    // 如果init state 设置为null的话，要加一层 过滤，要不然Uncaught TypeError: Cannot convert undefined or null to object\n\n    // if (!product) {\n    //     return null;\n    // }\n\n    console.log(\"detail state\", product)\n\n    if (Object.keys(product) <= 0) {\n        return null;\n    }\n\n    return (\n        <div className=\"ui grid container\" style={{\n            marginTop: \"45px\"\n        }}>\n\n            <div className=\"ui placeholder segment container\">\n                <div className=\"ui two column very relaxed stackable grid\">\n                    <div className=\"column\">\n                        <div className=\"ui form\">\n\n                            <div className=\"ui  \">\n                                <img src={product.image} style={{ display: \"block\", width: \"100%\", margin: \"5px\" }} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\" aligned column\">\n\n                        <DetailTitle> {product.title}</DetailTitle>\n                        <DetailPrice> $ {product.price} </DetailPrice>\n                        <DetailCategory>{product.category}</DetailCategory>\n                        <DetailDesc>{product.description}</DetailDesc>\n                        <DetailCart>\n                            <div className=\"hidden content\">\n\n                                <BsFillCartCheckFill size={25} />\n                            </div>\n                            <div className=\"visible\">\n\n                                Add To Cart\n                            </div>\n                        </DetailCart>\n                    </div>\n                </div>\n                <div className=\"ui vertical divider\">\n                    AND\n                </div>\n            </div>\n        </div>\n    )\n    // return (\n\n    //     <DetailWrapper>\n    //         <LeftPart >\n    //             left {params.id}\n    //             <div>\n    //                 <div>\n    //                     {/* <img src={product.image} alt={product.title} /> */}\n    //                 </div>\n    //             </div>\n\n    //         </LeftPart>\n    //         <DetailDivided>and</DetailDivided>\n\n    //         <RightPart> right\n    //             <DetailTitle> title</DetailTitle>\n    //             <DetailPrice> price\n    //                 <div> spot</div>\n    //             </DetailPrice>\n    //             <DetailCategory> category</DetailCategory>\n    //             <DetailDesc> desc</DetailDesc>\n    //             <DetailCart> add to cart</DetailCart>\n\n    //         </RightPart>\n\n    //     </DetailWrapper>\n    // )\n}\n\n// flex： display :flex, direction: row\n\n","\n\nimport { GET_DETAIL, REMOVE_DETAIL } from '../constants'\n\nexport const removeDetail = () => ({ type: REMOVE_DETAIL })\nexport const getDetail = (data) => ({ type: GET_DETAIL, data })\n\n\n"],"names":["DetailTitle","styled","DetailPrice","DetailCategory","DetailDesc","DetailCart","ProductDetail","p","params","useParams","console","log","JSON","stringify","id","dispatch","useDispatch","product","useSelector","state","proDetail","getDetailDataAction","data","findContent","ProductList","parseInt","type","GET_DETAIL","useEffect","REMOVE_DETAIL","Object","keys","className","style","marginTop","src","image","display","width","margin","title","price","category","description","size"],"sourceRoot":""}